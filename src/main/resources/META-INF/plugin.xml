<!--

    The MIT License (MIT)

    Copyright © «2019» «ANDREY BEREZIN»

    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
    associated documentation files (the “Software”), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be included in all copies or substantial
    portions of the Software.

    THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
    INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
    PARTICULAR PURPOSE AND NONINFINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
    AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

-->
<idea-plugin>
    <id>org.aber.plugins.poorcheck</id>
    <name>Poor Check</name>
    <vendor email="androberz@gmail.com" url="https://github.com/androberz/poor-check">Andrey Berezin</vendor>

    <description><![CDATA[
    <p>Warn of possible poor code usage in Java.</p></br>

    <p>Code usage cases to cover:</p></br>

    <p>1. Not overridden toString() call;</p>
    <p>2. Not overridden equals() call;</p>
    <p>3. java.util.Optional isPresent() always returns true;</p>
    <p>4. java.util.Optional isEmpty() always returns false;</p>
    <p>5. Class with not overridden equals()/hashCode() methods is used as a key in a hash structures (including java.util.stream.Collectors toMap());</p>
    <p>6. Added support for Lombok's @EqualsAndHashCode</p>
    <p>7. Added support for Guava's ImmutableSet and ImmutableMap</p>
    </br>
    <p>When an above case occurs the warning is shown.</p>
    <p>An action to generate the missed code is proposed (Alt + Enter)</p>

    ]]></description>

    <version>1.0.1</version>

    <depends>com.intellij.modules.java</depends>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
        <annotator language="JAVA" implementationClass="org.aber.plugins.poorcheck.annotators.PoorCheckAnnotator"/>
    </extensions>

    <actions>
    </actions>
</idea-plugin>